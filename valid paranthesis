import java.util.Stack;

class Solution {
    public boolean isValid(String s) {
        Stack<Character> stack = new Stack<>();

        for (int i = 0; i < s.length(); i++) {
            char ch = s.charAt(i);

            // If open bracket, push its corresponding closing bracket onto stack
            if (ch == '(') {
                stack.push(')');
            } else if (ch == '{') {
                stack.push('}');
            } else if (ch == '[') {
                stack.push(']');
            } else {
                // If current char is a closing bracket, check if stack is empty or top doesn't match
                if (stack.isEmpty()||stack.pop()!=ch) {
                    return false;
                }
            }
        }

        // If stack is empty, all brackets matched properly
        return stack.isEmpty();
    }
}
